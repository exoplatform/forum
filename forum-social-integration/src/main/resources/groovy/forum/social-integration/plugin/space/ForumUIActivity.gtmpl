<%
/*
<!--

    Copyright (C) 2003-2010 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.apache.commons.lang.ArrayUtils;
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.webui.form.UIFormTextAreaInput;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.exoplatform.social.core.space.model.Space;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.exoplatform.forum.ext.impl.ForumSpaceActivityPublisher;
  import org.apache.commons.lang.StringEscapeUtils;

  import static org.exoplatform.social.webui.activity.BaseUIActivity.TEMPLATE_PARAM_COMMENT;

  def pcontext = Util.getPortalRequestContext();
  
  def jsManager = pcontext.getJavascriptManager();
  //jsManager.loadScriptResource("base"); //portal's problem, workaround for uicomponent.event()

  def labelActivityHasBeenDeleted = _ctx.appRes("UIActivity.label.Activity_Has_Been_Deleted");
  def activity = uicomponent.getActivity();
  def activityDeletable = uicomponent.isActivityDeletable();
  def activityCommentAndLikable = uicomponent.isActivityCommentAndLikable();
  def activityCommentable = uicomponent.isActivityCommentable();
  def streamOwner = activity.getStreamOwner();
  String viewActivityTip = _ctx.appRes("UIActivity.msg.ViewActivity");
  def deleteActivityTip = _ctx.appRes("UIActivity.msg.DeleteActivity");
%>

<% if (activity) { //process if not null

  def labelComment = _ctx.appRes("UIActivity.label.Comment");
  def labelCancel = _ctx.appRes("UIActivity.label.Cancel");
  def labelView = _ctx.appRes("ForumUIActivity.label.view");
  def labelUpdate = _ctx.appRes("UIActivity.label.Update");
  def labelEdit = _ctx.appRes("UIActivity.label.Edit");
  def labelDelete = _ctx.appRes("UIActivity.label.Delete");
  def labelViewAllReplies = _ctx.appRes("UIActivity.label.ViewAllReplies");
  def inputWriteAComment = _ctx.appRes("UIActivity.input.Add_your_comment").replace("'", "\\'");
  def labelShowAllComments = _ctx.appRes("UIActivity.label.Show_All_Comments");
  def labelHideAllComments = _ctx.appRes("UIActivity.label.Hide_All_Comments");
  def labelShowPreviousComments = _ctx.appRes("UIActivity.label.Show_Previous_Comments");
  
  def captionConfirmation=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirmation"));
  def labelConfirmbutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Confirm_Delete_Activity-Button"));
  def labelClosebutton=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.label.Cancel_Delete_Activity-Button"));
  def labelToDeleteThisComment=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.msg.Are_You_Sure_To_Delete_This_Comment"));
  def labelToDeleteThisActivity=StringEscapeUtils.escapeHtml(_ctx.appRes("UIActivity.msg.Are_You_Sure_To_Delete_This_Activity"));

  def commentList = uicomponent.getComments();
  def totalComments = uicomponent.getAllCommentSize();

  if (totalComments > 0) {
    labelShowAllComments = labelShowAllComments.replace("{0}", totalComments + "");
    labelHideAllComments = labelHideAllComments.replace("{0}", totalComments + "");

  }

  def parentCommentsSize = uicomponent.getParentCommentsSize(commentList);
  def commentsHidden = totalComments-parentCommentsSize;

  def commentListStatus = uicomponent.getCommentListStatus();
  def commentFormDisplayed = uicomponent.isCommentFormDisplayed();
  def placeholder = _ctx.appRes("UIActivity.comment.placeholder").replace("'", "\\'");

  def LikePopupTitleLabel = _ctx.appRes("UIActivity.title.PopupCommentLikers");
  def IgnoreLabel = _ctx.appRes("UserProfilePopup.label.Ignore");
  def ConnectLabel = _ctx.appRes("UserProfilePopup.label.Connect");
  def ConfirmLabel = _ctx.appRes("UserProfilePopup.label.Confirm");
  def CancelRequestLabel = _ctx.appRes("UserProfilePopup.label.CancelRequest");
  def RemoveConnectionLabel = _ctx.appRes("UserProfilePopup.label.RemoveConnection");
  def labels = """ {
    LikePopupTitle: '$LikePopupTitleLabel',
    Connect: '$ConnectLabel',
    Confirm: '$ConfirmLabel',
    CancelRequest: '$CancelRequestLabel',
    RemoveConnection: '$RemoveConnectionLabel',
    Ignore: '$IgnoreLabel'
  }"""
  def spaceGroupId = uicomponent.getSpaceGroupId();

  //params for init UIActivity javascript object
  def params = """ {
    activityId: '${activity.id}',
    placeholderComment: '${placeholder}',
    inputWriteAComment: '$inputWriteAComment',
    spaceGroupId: '$spaceGroupId',
    commentMinCharactersAllowed: '${uicomponent.getCommentMinCharactersAllowed()}',
    commentMaxCharactersAllowed: '${uicomponent.getCommentMaxCharactersAllowed()}',
    commentFormDisplayed: '$commentFormDisplayed',
    allCommentSize: '${totalComments}',
    commentFormFocused: '${uicomponent.isCommentFormFocused()}',
    labels: $labels
  } """

  jsManager.require("SHARED/social-ui-activity","activity").addScripts("activity.onLoad($params);")
           .require("SHARED/jquery", "gj").addScripts("gj(document).ready(function() { gj(\"*[rel='tooltip']\").tooltip();});");

  //make sures commentFormFocused is set to false to prevent any refresh to focus, only focus after post a comment
  uicomponent.setCommentFormFocused(false);
%>

<div class="activityStream uiActivityStreamWrapper uiForumActivity" id="activityContainer${activity.id}">
	  <% uiform.begin() %>
	<div class="boxContainer" id="boxContainer">
		<div id="ContextBox${activity.id}" class="uiBox contentBox">
			<div id="ActivityContextBox${activity.id}">
				<div class="heading">
					<span class="arrowLeft"></span>
          <div class="activityHeader">
              <% _ctx.includeTemplates("UIActivityHeading") %>
         <!-- three dots activity menu -->
                    <div id="dropDownEditActivity${activity.id}" class="btn-group uiDropdownWithIcon actLink">
                        <div class="dropdown-toggle" data-toggle="dropdown">
                            <i class="uiIconActivityAction uiIconLightGray">
                            </i>
                        </div>
                        <ul class="dropdown-menu actLink-items pull-right" role="menu">
                            <li class="actLink-item">
                              <a id="Permalink${activity.id}" rel="tooltip" data-placement="bottom" title="$viewActivityTip" href="<%=uicomponent.getActivityPermalink(activity.id)%>">
                                  <i class="uiIcon uiIconOpenActivity actLink-icon"></i>
                                  <span class="actLink-label">$viewActivityTip</span>
                              </a>
                            </li>
                                <% if (! activity.isLocked() && !uicomponent.isDeletedSpace(streamOwner)) { %>
                            <li class="actLink-item">
                                <a href="${uicomponent.getReplyLink()}" id="ReplyLink${activity.id}">
                                  <i class="uiIcon uiIconReply actLink-icon"></i>&nbsp;
                                    <span class="actLink-label"><%= _ctx.appRes("ForumUIActivity.label.reply")%></span>
                                </a>
                            </li>
                                <% } %>
                                <% if (!uicomponent.isDeletedSpace(streamOwner)) { %>
                            <li class="actLink-item">
                                    <a href="${uicomponent.getLastReplyLink()}" id="View${activity.id}">
                                        <i class="uiIcon uiIconSocLastestReply actLink-icon"></i>&nbsp;
                                        <span class="actLink-label"><%= _ctx.appRes("ForumUIActivity.label.lastReply") %></span>
                                    </a>
                            </li>
                            <% } %>
                            <%
                                if (activityDeletable) {
                            %>
                            <li class="actLink-item">
                                <a href="javascript:void(0)" data-confirm="$labelToDeleteThisActivity" data-caption="$captionConfirmation" data-close="$labelClosebutton" data-ok="$labelConfirmbutton"  data-delete="<%=uicomponent.event("DeleteActivity", uicomponent.getId(), "");%>" class="controllDelete" id="DeleteActivityButton${activity.id}">
                                    <i class="uiIcon uiIconTrashActivity actLink-icon"></i>
                                    <span class="actLink-label">${labelDelete}</span>
                                </a>
                            </li>
                            <%}%>
                        </ul>
                    </div>
        </div><!--end activityHeader-->
       
	
				</div><!--end heading-->
				<div class="uiBox roundedBottom introBox forumShare">
					<div class="clearfix headingContainer">
						<div class="pull-right uiVote uiVoteMini">
						  <%
                 int rateInt = (Integer) uicomponent.getRate();
                 double diff = uicomponent.getRate() - rateInt;
                 String labelRating = _ctx.appRes("ActivityRating.title.NotRateYet");
                 if (rateInt > 0)
                   labelRating = _ctx.appRes("ActivityRating.title.rank${rateInt}");
              %>
							<div class="avgRatingImages sumaryRate" rel="tooltip" data-placement="bottom" title="$labelRating">
								<%
                 for (int i = 1; i<=5; i++) {
                   if (i <= rateInt) { %>
                     <i class="voted"></i>
                <% } else if (i == (rateInt + 1)) {
                     if (diff > 0.7) { %>
                        <i class="voted"></i>
                   <% } else if (diff < 0.3) { %>
                        <i class="unvoted"></i>
                   <% } else { %>
                        <i class="votedHaft"></i>
                   <% }
                    } else {  %>
                      <i class="unvoted"></i>
                 <% }
                 } %>
							</div>
						</div>
						<div class="titleForum">
						  <%
			          def href = "<a class='textBold linkTitle' href=\"%s\">%s</a>";
			          def activityContentTitle = uicomponent.getActivityContentTitle(_ctx, href);
			          def activityBody = activity.getBody().trim();
			        %>
							$activityContentTitle
						</div>
					</div>
				  <div class="contentForum theContent">
					<p class="text">$activityBody</p>
<%
          def numberOfReplies = uicomponent.getNumberOfReplies();

        %>
					<span>$numberOfReplies</span>
				  </div>
				</div><!--end introBox,linkShare-->
            <div class="desktop-input clearfix">
	                <div class="blastInputPeople hideEffect">
	                    <div>
	                    <% uicomponent.renderChild(uicomponent.COMPOSER_TEXT_AREA_EDIT_INPUT+activity.id); %>
	                        <div class="uiAction paddingAction">
	                            <button class="btn pull-left btn-primary" onclick="<%=uicomponent.event("EditActivity")%>" id="EditActivityButton${activity.id}">${labelUpdate}</button>&nbsp;
	                            <button href="javascript:void(0)" data-cancel-edit-comment-id="${activity.id}" class="btn pull-left" id="DeleteEditCommentButton${activity.id}">${labelCancel}</button>
	                        </div>
	                    </div>
	                </div>
            </div>
              <div class="actionsDetailsWrapper">
            <% _ctx.includeTemplates("UIActivityListLiked") %>
            <% _ctx.includeTemplates("UIActivityActionBar-actions") %>
            </div>

				<div id="CommentBlockBound${activity.id}" class="commentBox">
					<div class="commentList">
					<%
					def commenterFullName, commenterProfileUri, commentMessage, commentPostedTime, commenterAvatarImgSrc, commentAbsolutePostedTime;
					def first = true, commentContentClass;
					def commentCounter = 0;
                    def subCommentSize = 0;
                    def subCommentIndex = 0;
                    def subCommentClass = "";
                    def hideSubComments = true;
                    def updatedCommentId = uicomponent.getAndSetUpdatedCommentId(null);
                    def showSubComments = false;
                    def updatedComment;
                    if (updatedCommentId) {
                      updatedComment = Utils.getActivityManager().getActivity(updatedCommentId);
                    }
                    commentList.each({
                      commentCounter++;
                      if (first & !uicomponent.commentListToggleable()) {
                          commentContentClass = "commentContent";
                          first = false;
                      } else {
                          commentContentClass = "";
                      }
                      def postLink = uicomponent.getViewPostLink(it);
                      def id = Utils.getIdentityManager().getIdentity(it.userId);
                      commenterFullName = StringEscapeUtils.escapeHtml(id.profile.fullName);
                      commenterProfileUri = LinkProvider.getUserProfileUri(id.getRemoteId());
                      def commentParentClass = it.parentCommentId == null ? "CommentBlock" : (subCommentClass + " subCommentBlock");
                      if(it.parentCommentId == null) {
                        subCommentSize = uicomponent.getSubCommentsSize(commentList, it.id);
                        subCommentIndex = 0;
                        if (updatedCommentId) {
                          if(updatedComment.parentCommentId == it.id || updatedComment.id == it.id){
                            showSubComments = true;
                          } else{
                            showSubComments = false;
                          }
                        }
                        hideSubComments = subCommentSize > 2 && (updatedCommentId == null || !showSubComments);
                        if(hideSubComments){
                          subCommentClass = "hidden";
                        } else {
                          subCommentClass = "";
                        }
                      } else {
                           subCommentIndex++;
                           if(hideSubComments && subCommentIndex == subCommentSize) {
                               %>
                              <div class="commentItem clearfix subCommentBlock subCommentShowAll" id="SubCommentShowAll_$it.parentCommentId">
                                <a href="javascript:void(0)" class="subCommentShowAllLink" data-parent-comment="$it.parentCommentId">
                                    <%=labelViewAllReplies.replace("{0}", String.valueOf(subCommentSize))%>
                                </a>
                              </div> 
                               <%
                           }
                      }
					  commentMessage = it.title;
					  commentPostedTime = uicomponent.getRelativeTimeLabel(_ctx, it.postedTime);
					  commentEditedTime = uicomponent.getRelativeTimeLabel(_ctx, it.updated.getTime());
					  commentEditedTime = _ctx.appRes("UIActivity.label.EditedFrom").replace("{0}",commentEditedTime);
					  commentAbsolutePostedTime = uicomponent.getAbsolutePostedTime(it.postedTime);
					  commenterAvatarImgSrc = id.profile.avatarUrl;
					  if (!commenterAvatarImgSrc) commenterAvatarImgSrc = LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
                      def commentActivityId = it.parentCommentId == null ? it.id : it.parentCommentId;
					%>
                    <div id="commentContainer${it.id}" data-comment-id="$commentActivityId" data-parent-comment="$it.parentCommentId" class="$commentParentClass">
					  <% if (commentCounter == commentList.size()) {%>
					  <div id="CommentBlock${activity.id}${commentCounter}" class="commentItem commentItemLast">
					  <% } else { %>
                      <div id="CommentBlock${it.id}" class="commentItem">
					  <% } %>
						<div class="commmentLeft">
						  <a class="avatarXSmall commenterAvatar" style="background-image:url('$commenterAvatarImgSrc');" href="$commenterProfileUri" rel="tooltip" data-placement="bottom" title="$commenterFullName" >
						  </a>
						</div><!--end commentLeft-->
						<div class="commentRight">
             <div class="authorCommentContainer clearfix">
                <div class="author">
                  <a href="$commenterProfileUri">$commenterFullName</a>
                </div>
                <div class="contentComment">
                  $commentMessage
                </div>
            </div>
                    <div class="desktop-input clearfix">
                        <div class="blastInputPeople hideEffect">
                            <div>
                                <textarea class="textarea hideEffect paddingAction" name="composerEditComment${it.id}" id="composerEditComment${it.id}" rows="10" cols="30"></textarea>
                            </div>
                            <div class="uiAction">
                                <button class="btn pull-left btn-primary" data-edit-comment-id="${it.id}" data-edit-comment-activityid="${activity.id}" data-click="<%= uicomponent.event("EditComment","COMMENTID"); %>" id="EditCommentButton${it.id}">${labelUpdate}</button>&nbsp;
                                <button href="javascript:void(0)" data-cancel-edit-comment-id="${it.id}" class="btn pull-left" id="DeleteEditCommentButton${it.id}">${labelCancel}</button>
                            </div>
                        </div>
                    </div>							
                            <%
                                _ctx.put(TEMPLATE_PARAM_COMMENT, it);
                                _ctx.put("authorName", id.remoteId);
                                _ctx.put("authorFullName", commenterFullName);
						        _ctx.put("activityID", activity.id);
						        _ctx.put("commentPostedTime", commentPostedTime);
						        _ctx.put("commentEditedTime", commentEditedTime);
						        _ctx.put("commentAbsolutePostedTime", commentAbsolutePostedTime);
                                def templateCommentActions = "war:/groovy/social/webui/activity/UIActivityCommentActions.gtmpl";
                                _ctx.include(templateCommentActions, uicomponent.getTemplateResourceResolver(_ctx.getRequestContext(), templateCommentActions));
                            %>
						</div><!--end commentRight-->
                        <div class="clearfix"></div>
					  <%
					    def commentEditable = uicomponent.isActivityEditable(it);
					    def commentDeletable = uicomponent.isCommentDeletable(it.userId);
					  %>
                        <div id="dropDownEditComment${it.id}" class="btn-group uiDropdownWithIcon actLink">
                            <div class="dropdown-toggle" data-toggle="dropdown">
                                <i class="uiIconActivityAction uiIconLightGray">
                                </i>
                            </div>
                            <ul class="dropdown-menu pull-right" role="menu">
                                <% if(postLink != null && postLink.length() > 0) { %>
                                  <li>
                                    <a id="ViewComment${it.id}" href="$postLink">${labelView}</a>
                                  </li>
                                <% } %>
								<% if(commentEditable) {%>
                                <li>
				                   <a id="CommentActivitylink${it.id}" data-edit-comment="${it.id}" class="" href="javascript:void(0)">${labelEdit}</a>
				                </li>
				                <%
								}
					                if (commentDeletable) {
					                String idDeleteComment = "DeleteCommentButton${it.id}";
				                %>
                                <li>
                                    <a href="javascript:void(0)" id="$idDeleteComment" data-confirm="$labelToDeleteThisComment" data-caption="$captionConfirmation" data-close="$labelClosebutton" data-ok="$labelConfirmbutton"  data-delete="<%= uicomponent.event("DeleteComment", uicomponent.id, it.id); %>"  class="controllDelete">${labelDelete}</a>
				                </li>
                                <% } %>
                            </ul>
                        </div>
					  </div><!--end commentItem-->
					 </div>
					<% }) %>				
					</div> <!--end commentlist-->
				    <div class="inputContainer" id="InputContainer${activity.id}">
					<%
					  def currentCommenterIdentity = uicomponent.getCommenterIdentity();
					  def currentCommenterUri = LinkProvider.getUserProfileUri(currentCommenterIdentity.getRemoteId());
					  def currentCommenterAvatar = currentCommenterIdentity.profile.avatarUrl;
					  def currentCommenterName = StringEscapeUtils.escapeHtml(currentCommenterIdentity.profile.fullName);
					  if (!currentCommenterAvatar) currentCommenterAvatar= LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
					%>
					<% if (commentList.size() == 0) { %>
					  <div class="commentItem noCommentFormBox" id="CommentFormBlock${activity.id}">
					<% } else { %>
					  <div class="commentItem commentFormBox" id="CommentFormBlock${activity.id}">
					<% } %>
					<%if (!uicomponent.isLockedOrClosed()) {%>
					  <div class="commmentLeft">
							<a class="avatarXSmall commenterAvatar" style="background-image:url('$currentCommenterAvatar');" rel="tooltip" data-placement="bottom" title="$currentCommenterName" href="$currentCommenterUri">
							</a>
						</div><!--end commentLeft--> 
						<div class="commentRight">
							<div class="commentInputBox ">
								<div class="commentInput"><% uicomponent.renderChild(UIFormTextAreaInput.class); %></div>
                                <button class="btn pull-left btn-primary" data-comment-button="${activity.id}" data-click="<%= uicomponent.event("PostComment", "COMMENTID") %>" id="CommentButton${activity.id}">$labelComment</button>
                                <button class="btn visible-phone" id="CancelButton${activity.id}">$labelCancel</button>
							</div>
						</div><!--end commentRight-->
                        <div class="clearfix"></div>
					<%}%>
					  </div> <!--end commentItem-->		
					</div><!--end commentlist-->
  <% if (uicomponent.commentListToggleable()) {
  def showAllCommentsAction = uicomponent.event("SetCommentListStatus", "all");
  def hideAllCommentsAction = uicomponent.event("SetCommentListStatus", "none");
  def loadPreviousCommentsAction = uicomponent.event("SetCommentListStatus", "all");
  %>
  <div class="commentListInfo clearfix">
              <% if (commentListStatus.getStatus().equals("latest") || commentListStatus.getStatus().equals("none")) { %>
                <a onclick="$showAllCommentsAction" href="#show-all-comments">$labelShowAllComments</a>
  <% } else if (commentListStatus.getStatus().equals("all")) { %>
  <% if (commentsHidden > 0) { %>
    <a onclick="$loadPreviousCommentsAction" href="#">$labelShowPreviousComments</a>
	                 <% } else { %>
	                   <a onclick="$hideAllCommentsAction" href="#hide-all-comments">$labelHideAllComments</a>
      <% } %>
    <% } %>
  </div>
            <% } %>
				</div><!--end commentBox-->
			</div><!--end #ActivityContextBox${activity.id}-->
		</div> <!--end ContextBox${activity.id}-->	
  </div> <!-- #boxContainer-->	  
  <% uiform.end() %>
</div>
<% } else { %> <!-- activity deleted -->
<div class="activityStream deleted">$labelActivityHasBeenDeleted</div>
<% }%>
